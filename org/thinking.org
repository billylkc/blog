#+STARTUP: content
#+hugo_base_dir: ../
#+hugo_section: ./posts

#+hugo_weight: auto
#+hugo_auto_set_lastmod: t

#+author: Billy Lam

* Thinking

** TODO Python debugger pdb

:PROPERTIES:
:EXPORT_FILE_NAME: python-debugger
:EXPORT_DATE: 2021-06-21
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: Python Debugging with pdb. pde.
:EXPORT_TITLE: Python Debugging with pdb
:SUMMARY: Python Debugging with pdb
:END:

I don't know where you are, I don't know how you work. But I will find you, And.. \\

I will fix you - TheRaxTon

<!--more-->

*** Introduction
Nobody writes perfect code.

Everyone has their own approach to debugging, but I’ve seen too many specialists try to spot bugs using basic things like print instead of actual debugging tools. Or even if they did use a debugging tool, they only used a small set of features and didn’t dig deeper into the wide range of opportunities good debuggers offer. And which could have saved those specialists a lot of time.


*** pdb
Cheatsheet

Basic
| Command     | Description                 |
|-------------+-----------------------------|
| **(h)** elp | List all available commands |
| (q)uit      | Quit debug session          |

Navigation and debug
| Command                | Description           |
|------------------------+-----------------------|
| (l)ist                 | List a few lines      |
| (ll)ong list           | List more lines       |
|------------------------+-----------------------|
| (n)ext                 | Move to next line     |
| (s)tep                 | Step into function    |
| <ENTER>                | repeat last command   |
| (p)rint /expr/         | Print variable /expr/ |
| (pp)retty print /expr/ | Pretty Print /expr/   |
|------------------------+-----------------------|
| (b)reak                | Show all break point  |
| (b)reak /num/          | Set bp at line /num/  |
| (c)ontinue             | Continue til next bp  |
|------------------------+-----------------------|
| locals()               | List local variables  |



Reference: [[https://appletree.or.kr/quick_reference_cards/Python/Python%20Debugger%20Cheatsheet.pdf][Python Debugger Cheatseet]]

*** Something



** TODO Google Search with Go
:PROPERTIES:
:EXPORT_FILE_NAME: google-search-with-go
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: Google Search with Go
:EXPORT_TITLE: Google Search with Go
:SUMMARY: Google Search with Go
:END:

Some short description

<!--more-->

*** Introduction

**Data enrichment with Google Search.**
Sometimes when the data we have is just some minimal text description, say, only the product name from your marketing department, there may not be enough features for you to build a model. I find it quite useful to enrich your data through Google Search. If you have faced the same problem before, read on.

*** Overview

1. Introduction to Google Search Package

2. Quick Demo

3. A Simple Use Case

4. Add Arguments

5. Compile to Binary File

*** Google Search Package

When i was looking for an Google search API in python, I didnt find one that is easy to use or the API often requires some sort of charges or registration. Finally I look for an alternatives in Go and this package fits my simple use case. The package is maintained by Victor Alagwu and here is the link to the repo (rocketlaunchr/google-search). The package is using web scrapping to capture the search results, so make sure you use it responsibly.

You can simply get the package by running

=go get -u github.com/rocketlaunchr/google-search=

*** Quick Demo

The package author already gave a pretty good demo in his repo.
#+begin_src go :imports "fmt"
  package main

  import (
      "fmt"
      "github.com/rocketlaunchr/google-search"
  )

  func main() {
      fmt.Println(googlesearch.Search(nil, "cars for sale in Toronto, Canada"))
  }
#+end_src

Results

#+begin_src json
[{
    "rank": 1,
    "url": "https://www.autotrader.ca/cars/on/toronto/",
    "title": "New \u0026 Used Cars for sale in Toronto | autoTRADER.ca",
    "description": "Looking to buy a car in Toronto? Visit autoTRADER.ca, Canada's largest selection for new \u0026 used cars, trucks and suvs."
},
{
    "rank": 2,
    "url": "https://www.carpages.ca/ontario/toronto/used-cars/",
    "title": "Used Cars Toronto | Carpages.ca",
    "description": "Used Cars for Sale in Toronto, ON. 2016 Hyundai Genesis. Sedan 4dr Sdn Technology. 2015 Mercedes-Benz ML-Class. 4MATIC 4dr ML 350 BlueTEC. 2010 Toyota Highl$
}]
#+end_src

*** A Simple Use Case

(To be added)


** TODO R ggplot2


** TODO Set up Git repository
:PROPERTIES:
:EXPORT_FILE_NAME: set-up-git-repo
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: Set up Git repository
:EXPORT_TITLE: Set up Git repository
:SUMMARY: Set up Git repository
:END:

Version control enables developers to move faster and it allows software teams to preserve efficiency and agility as the team scales.

<!--more-->

*** Introduction
Keeping track of changes of your project is crucial, especially when you are collaborating with others. Having a way to know what changed in a file when and by whom, will help you adapt and be as lean as possible in the current fast-moving business environment.

While these version control tools make tracking changes easy, learning them can be hard. Let's clear up what Git can bring us, and learn it in a quick and painless way.

*** Install Git client


** TODO Why emacs

** TODO Python Machine Learning Snippets
:PROPERTIES:
:EXPORT_FILE_NAME: python-machine-learning-snippets
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover https://storage.googleapis.com/billylkc-blog-image/images/posts/4-functional-options/thumbnails.jpg
:DESCRIPTION: Python Machine Learning Snippets
:EXPORT_TITLE: Python Machine Learning Snippets
:SUMMARY: Python Machine Learning Snippets
:END:

Some short description

<!--more-->


** TODO Cobra intro
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->


** TODO Image search app
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->


** TODO Streamlit Intro
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->


** TODO gRPC
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->
- keywords (e.g. cloud, machine learning, etc)
- google search
- gRPC
- word embedding


** TODO Useful Jupyter plugins
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->


** TODO Empty template
:PROPERTIES:
:EXPORT_FILE_NAME: file-name
:EXPORT_DATE: 2021-02-22
:EXPORT_HUGO_MENU: :menu "main"
:EXPORT_HUGO_WEIGHT: 100
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :nolastmod true :cover
:DESCRIPTION: description
:EXPORT_TITLE: description
:SUMMARY: description
:END:

Some short description

<!--more-->
